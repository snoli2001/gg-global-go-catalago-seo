---
import MotoListReact from "./MotoListReact";
import { brandsService } from "../services/api/brands.service";
import { categoriesService } from "../services/api/categories.service";
import { motoService } from "../services/api/moto.service";
import { bannersService } from "../services/api/banners.service";
import type { Brand } from "../types/brand.interface";
import type { Category } from "../types/category.interface";
import type { Moto } from "../types/moto.interface";

// Fetch critical data first
let brands: Brand[] = [];
let categories: Category[] = [];
let banners: any[] = [];
let initialMotos: Moto[] = [];

try {
  // Fetch all data in parallel including motos
  const [brandsData, categoriesData, bannersData, motosData] = await Promise.all([
    brandsService.getBrands(),
    categoriesService.getCategories(),
    bannersService.getBanners(),
    motoService.getMotos()
  ]);

  brands = brandsData;
  categories = categoriesData;
  banners = bannersData;
  initialMotos = motosData;
} catch (error) {
  console.error("❌ Error fetching data:", error);
  brands = [];
  categories = [];
  banners = [];
  initialMotos = [];
}
---

<MotoListReact
  client:load
  initialBrands={brands}
  initialCategories={categories}
  initialMotos={initialMotos}
  initialBanners={banners}
/>

<script>
  // Retry loading motos if initial load failed
  import { motoService } from "../services/api/moto.service";

  async function retryLoadMotos() {
    try {
      const motos = await motoService.getMotos();
      if (motos && motos.length > 0) {
        window.dispatchEvent(new CustomEvent('motosLoaded', { detail: motos }));
      }
    } catch (error) {
      console.error("❌ Error retrying motos load:", error);
    }
  }

  // Use setTimeout as a fallback for requestIdleCallback
  const scheduleRetry = window.requestIdleCallback || ((cb) => setTimeout(cb, 1));
  
  // Only retry if we don't have motos yet
  if (document.querySelectorAll('[data-moto-card]').length === 0) {
    scheduleRetry(() => {
      retryLoadMotos();
    });
  }
</script>
