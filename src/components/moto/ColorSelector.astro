---
interface Props {
  colors: any[];
  hasColorImage: (colorId: number) => boolean;
}

const { colors, hasColorImage } = Astro.props;
---

<section
  class="flex justify-end gap-2 items-center py-3 md:py-4 lg:py-6 xl:py-12 px-4 md:px-16 lg:px-24 max-w-screen-2xl mx-auto"
>
  <span class="text-dark text-lg font-medium">Colores: </span>
  <div class="flex items-center gap-2.5 md:gap-2">
    {
      colors.map((color) => (
        <button
          type="button"
          title={color.modelo}
          data-color-id={color.color_id}
          class:list={[
            "color-select-btn",
            "w-8 h-8 rounded-full border-2 border-gray-300 cursor-pointer hover:scale-110 transition-all duration-200",
            !hasColorImage(color.color_id) && "cursor-not-allowed opacity-50",
          ]}
          style={`background: linear-gradient(45deg, ${color.hex1}, ${color.hex2})`}
          disabled={!hasColorImage(color.color_id)}
        />
      ))
    }
  </div>
</section>

<script>
  // Get all color selection buttons
  const colorButtons = document.querySelectorAll(".color-select-btn");

  // Add click event listener to each button
  colorButtons.forEach((button) => {
    button.addEventListener("click", () => {
      const colorId = parseInt(button.getAttribute("data-color-id") || "0");
      if (window.onColorSelect) {
        window.onColorSelect(colorId);
      }
    });
  });
</script> 