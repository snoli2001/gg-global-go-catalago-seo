---
import type { Moto } from "../../types/moto.interface";

interface Props {
  moto: Moto;
  bannerImages: any[];
  formatPrice: (price: number) => string;
  initialImage: string;
}

const { moto, bannerImages, formatPrice, initialImage } = Astro.props;

const whatsAppchatLink = `https://api.whatsapp.com/send?phone=51912440103&text=Hola%2C%20quisiera%20informaci%C3%B3n%20sobre%20el%20modelo%20${moto.modelo}%2C%20del%20cat%C3%A1logo%20de%20las%20motos%20seminuevas%20%F0%9F%8F%81%F0%9F%94%B4%F0%9F%94%B5`;
---

<header class="w-full relative max-w-screen-2xl mx-auto">
  <div
    class="w-full h-80 lg:h-[526px] items-center flex justify-center md:justify-between md:px-12 lg:px-12 xl:px-24"
  >
    <section
      class="z-10 h-full flex flex-col justify-center gap-4 lg:max-w-[370px]"
    >
      <div class="flex flex-col">
        <h2
          class={`${moto.modelo.length > 18 ? "text-xl lg:text-3xl" : "text-3xl lg:text-4xl"} font-semibold text-white hidden md:block`}
        >
          <div class="flex items-center gap-3">
            <span>{moto.modelo}</span>
            {
              moto.isPreOwned && (
                <span class="text-xs px-2 py-0.5 bg-yellow-100 text-yellow-800 rounded-full">
                  Seminueva
                </span>
              )
            }
          </div>
        </h2>
        <strong class="text-2xl hidden lg:block font-medium text-gg-blue-100">
          {moto.currency.toLowerCase() === "sol" ? "S/" : "$"}
          {
            moto.currency.toLowerCase() === "sol"
              ? formatPrice(moto.precio)
              : formatPrice(moto.price_dollar)
          }
        </strong>
        {
          moto.currency.toLowerCase() === "dolar" && (
            <>
              <span class="text-xs hidden lg:block text-gg-blue-100">
                T.C. Referencial: S/ 3.70
              </span>
              <span class="text-sm hidden lg:block text-gg-blue-100 font-medium">
                Precio en soles: S/ {formatPrice(moto.precio)}
              </span>
            </>
          )
        }
        {
          Number(moto.fee_amount) > 0 && (
            <span class="text-xl hidden lg:flex items-center gap-1 text-emerald-600 font-medium mt-1">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="icon icon-tabler icons-tabler-outline icon-tabler-rosette-discount"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M9 15l6 -6" />
                <circle cx="9.5" cy="9.5" r=".5" fill="currentColor" />
                <circle cx="14.5" cy="14.5" r=".5" fill="currentColor" />
                <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7a2.2 2.2 0 0 0 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1a2.2 2.2 0 0 0 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
              </svg>
              Desde S/ {formatPrice(Number(moto.fee_amount))} semanales
            </span>
          )
        }
      </div>
      <p class="text-sm text-white hidden lg:block w-full text-pretty">
        {moto.texto}
      </p>
      <section class="w-full lg:block hidden">
        {
          moto.isPreOwned ? (
            <a
              href={whatsAppchatLink}
              target="_blank"
              class="cursor-pointer text-center inline-block px-6 py-3 bg-gg-blue-500 text-white rounded-lg hover:bg-gg-blue-600 transition-colors w-full"
            >
              Adquirir moto seminueva
            </a>
          ) : (
            <button
              data-financing-button
              data-colors={JSON.stringify(moto.colores)}
              class="cursor-pointer inline-block px-6 py-3 bg-gg-blue-500 text-white rounded-lg hover:bg-gg-blue-600 transition-colors w-full"
            >
              Financiar moto
            </button>
          )
        }
      </section>
    </section>

    <img
      id="moto-image"
      src={initialImage}
      alt={`${moto.marca} ${moto.modelo}`}
      class="h-56 w-auto relative mix-blend-multiply z-10 lg:h-80 xl:h-[420px] moto-image-transition"
      style={{ viewTransitionName: `moto-${moto.idModelo}` }}
      fetchpriority="high"
      decoding="async"
      width="800"
      height="600"
    />
    <img
      src="/imgs/moto-detail-background-desktop.jpg"
      alt="Global Go Background"
      class="absolute top-0 left-0 w-full h-full hidden md:block lg:hidden xl:block"
      loading="lazy"
      decoding="async"
      width="1920"
      height="1080"
    />
    <img
      src="/imgs/moto-detail-background-desktop-lg.jpg"
      alt="Global Go Background"
      class="absolute top-0 left-0 w-full h-full hidden lg:block xl:hidden"
      loading="lazy"
      decoding="async"
      width="1920"
      height="1080"
    />
  </div>

  <img
    src={moto.logo}
    alt={`Logo ${moto.marca}`}
    class="absolute top-5 right-5 w-20 h-20 md:hidden"
    loading="lazy"
    decoding="async"
    width="80"
    height="80"
  />
  <div class="absolute top-6 hidden md:block right-25">
    <img
      src={moto.logo}
      alt={`Logo ${moto.marca}`}
      class="w-20 h-20"
      loading="lazy"
      decoding="async"
      width="80"
      height="80"
    />
  </div>
</header>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .moto-image-transition {
    animation: fadeIn 0.5s ease-out;
  }
</style>
